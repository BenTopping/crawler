name: CI docker

on:
  # Trigger the workflow on push or pull request,
  push:
    branches:
      - develop
      - master
    tags:
      - uat-*
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - develop
      - master
    paths-ignore:
      - "README.md"

env:
  IMAGE_NAME: ${{ github.repository }}/${{ github.event.repository.name }}

jobs:
  build_and_test_job:
    runs-on: ubuntu-18.04
    services:
      mongodb:
        image: mongo:4.2.5
        ports:
          - 27017:27017
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unified_warehouse_test
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: >-
          docker build .
          --file Dockerfile
          --tag docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
      - name: Check format with black
        run: >-
          # stop the build if there are black formatting errors
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          python -m black --check .
      - name: Lint with flake8 (1)
        run: >-
          # stop the build if there are Python syntax errors or undefined names
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Lint with flake8 (2)
        run: >-
          # exit-zero treats all errors as warnings
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          flake8 . --count --exit-zero --max-complexity=12 --max-line-length=100 --statistics
      - name: Run mypy against the image
        run: >-
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          python -m mypy .
      - name: Create mysql test warehouse database and table
        run: >-
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          python setup_test_db.py
      - name: Run tests against the image
        run: >-
          docker run
          --network host
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
          python -m pytest -x
      - name: Login to regitry
        run: >-
          docker login
          -u ${{ github.actor }}
          -p ${{ secrets.GITHUB_TOKEN }}
          docker.pkg.github.com
      - name: Publish image with image tag being either develop/master/<tag_name>
        run: >-
          docker push
          docker.pkg.github.com/${IMAGE_NAME}:${GITHUB_REF##*/}
